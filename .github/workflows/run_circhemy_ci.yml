name: CI tests

on:
  push:
  pull_request:
#  schedule:
#    - cron: '0 7 * * *'

concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  Main:
    strategy:
      matrix:
        os: [ubuntu-22.04]
#        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04, macos-11, macos-12]
        python-version: ["3.7"]
#        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
    - name: Create files
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Updating setuptools
      run: |
         python3 -m pip install -U pip setuptools
    - name: Updating pip
      run: |
         python3 -m pip install --upgrade pip
    - name: Installing circhemy & Python dependencies
      run: |
         python3 -m pip install ./ -v
    - name: Check if circhemy starts
      run: |
         circhemy --version
         which circhemy
    - name: Unzip SQLite database
      run: |
         CIRCHEMY_DB_PATH=`python3 -c "import site; print(site.getsitepackages()[0])"`/circhemy/circhemy/data/circhemy.sqlite3.bz2
         bunzip2 $CIRCHEMY_DB_PATH
    - name: Running circhemy convert test
      run: |
         cat `python3 -c "import site; print(site.getsitepackages()[0])"`/circhemy/data/circhemy_query.results | circhemy convert  -q STDIN -i circBase -o CircAtlas circBase Genome > convert_output
    - name: Checking generated output against gold output
      run: |
         diff `python3 -c "import site; print(site.getsitepackages()[0])"`/circhemy/data/circhemy_convert.results convert_output
    - name: Running circhemy query test
      run: |
         circhemy query -o  circBase -b *atf6 -g hg38 | cut -f1 > query_output
    - name: Checking generated output against gold output
      run: |
         diff `python3 -c "import site; print(site.getsitepackages()[0])"`/circhemy/data/circhemy_query.results query_output

    runs-on: ${{ matrix.os }}
